{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["Header","lazy","SearchBox","MoviesList","MoviesSuggestion","Pagination","SearchResultsDetails","ModalMovie","App","useState","page","setPage","title","setTitle","movies","setMovies","movieId","setMovieId","isOpen","setIsOpen","preTitle","setPreTitle","preMovie","setPreMovie","isActive","setIsActive","totalResults","setTotalResults","totalPages","setTotalPages","moviesSuggestion","setMoviesSuggestion","refTitle","useRef","myContainer","movieSuggestion","refMoviesSuggestion","useEffect","portal","document","getElementById","current","parentNode","style","overflowX","overflowY","zIndex","onClick","className","ref","fallback","onChange","e","movie","open","backgroundColor","onClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cd39f507.chunk.js","sourcesContent":["import \"./App.css\"\nimport React, { lazy, useState, Suspense, useRef, useEffect } from \"react\"\n\nconst Header = lazy(() => import(\"./components/Header\"))\nconst SearchBox = lazy(() => import(\"./components/SearchBox\"))\nconst MoviesList = lazy(() => import(\"./components/MoviesList\"))\nconst MoviesSuggestion = lazy(() => import(\"./components/MoviesSuggestion\"))\nconst Pagination = lazy(() => import(\"./components/Pagination\"))\nconst SearchResultsDetails = lazy(() => import(\"./components/SearchResultsDetails\"))\nconst ModalMovie = lazy(() => import(\"./components/ModalMovie\"))\n\nfunction App() {\n\tconst [page, setPage] = useState(() => 0)\n\tconst [title, setTitle] = useState(() => \"\")\n\tconst [movies, setMovies] = useState(() => [])\n\tconst [movieId, setMovieId] = useState(() => \"\")\n\tconst [isOpen, setIsOpen] = useState(() => false)\n\tconst [preTitle, setPreTitle] = useState(() => \"\")\n\tconst [preMovie, setPreMovie] = useState(() => {})\n\tconst [isActive, setIsActive] = useState(() => false)\n\tconst [totalResults, setTotalResults] = useState(() => \"\")\n\tconst [totalPages, setTotalPages] = useState(() => \"\")\n\tconst [moviesSuggestion, setMoviesSuggestion] = useState(() => [])\n\n\tconst refTitle = useRef(() => \"\")\n\tconst myContainer = useRef(() => null)\n\tconst movieSuggestion = useRef(() => {})\n\tconst refMoviesSuggestion = useRef(() => [])\n\n\tuseEffect(() => {\n\t\tif (isOpen) {\n\t\t\tconst portal = document.getElementById(\"portal\")\n\t\t\tmyContainer.current.parentNode.parentNode.style.overflowX = \"hidden\"\n\t\t\tmyContainer.current.parentNode.parentNode.style.overflowY = \"hidden\"\n\t\t\tportal.style.zIndex = 5555\n\t\t} else if (!isOpen) {\n\t\t\tconst portal = document.getElementById(\"portal\")\n\t\t\tmyContainer.current.parentNode.parentNode.style.overflowX = \"auto\"\n\t\t\tmyContainer.current.parentNode.parentNode.style.overflowY = \"auto\"\n\t\t\tportal.style.zIndex = -1\n\t\t}\n\t}, [isOpen])\n\n\tconst handleChange = e => {\n\t\trefTitle.current = e\n\t}\n\n\tconst renderSeparators = () => {\n\t\tif (title && totalResults) {\n\t\t\treturn <div className='separator' style={{ backgroundColor: \"#ffffff\" }}></div>\n\t\t} else if ((title && totalResults === 0) || movies === 0) {\n\t\t\treturn \"\"\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className='separator' style={{ backgroundColor: \"#ffffff\" }}></div>\n\t\t\t\t<div className='separator' style={{ backgroundColor: \"#ffffff\" }}></div>\n\t\t\t\t<div className='separator' style={{ backgroundColor: \"#ffffff\" }}></div>\n\t\t\t\t<div className='separator' style={{ backgroundColor: \"#ffffff\" }}></div>\n\t\t\t\t<div className='separator' style={{ backgroundColor: \"#ffffff\" }}></div>\n\t\t\t</>\n\t\t)\n\t}\n\n\tconst onClick = () => setIsOpen(() => true)\n\tconst onClose = () => setIsOpen(() => false)\n\n\treturn (\n\t\t<>\n\t\t\t<div className='container' ref={myContainer}>\n\t\t\t\t{/* Header */}\n\t\t\t\t<Suspense fallback={<h1>Loading.... </h1>}>\n\t\t\t\t\t<Header />\n\t\t\t\t</Suspense>\n\n\t\t\t\t<div className='separator'></div>\n\n\t\t\t\t{/* SearchBox */}\n\t\t\t\t<Suspense fallback={<h1>Loading.... </h1>}>\n\t\t\t\t\t<SearchBox\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tsetTitle={setTitle}\n\t\t\t\t\t\trefTitle={refTitle}\n\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\tsetPage={setPage}\n\t\t\t\t\t\tpage={page}\n\t\t\t\t\t\tsetMovies={setMovies}\n\t\t\t\t\t\tsetMoviesSuggestion={setMoviesSuggestion}\n\t\t\t\t\t\trefMoviesSuggestion={refMoviesSuggestion}\n\t\t\t\t\t\ttotalResults={totalResults}\n\t\t\t\t\t\tsetTotalResults={setTotalResults}\n\t\t\t\t\t\ttotalPages={totalPages}\n\t\t\t\t\t\tsetTotalPages={setTotalPages}\n\t\t\t\t\t\tisActive={isActive}\n\t\t\t\t\t\tsetIsActive={setIsActive}\n\t\t\t\t\t\tpreTitle={preTitle}\n\t\t\t\t\t\tsetPreTitle={setPreTitle}\n\t\t\t\t\t/>\n\t\t\t\t</Suspense>\n\n\t\t\t\t{/* MoviesSuggestion */}\n\t\t\t\t<Suspense fallback={<h1>Loading.... </h1>}>\n\t\t\t\t\t<MoviesSuggestion\n\t\t\t\t\t\tisActive={isActive}\n\t\t\t\t\t\tmoviesSuggestion={moviesSuggestion}\n\t\t\t\t\t\tpreMovie={preMovie}\n\t\t\t\t\t\tpreTitle={preTitle}\n\t\t\t\t\t\tmovie={movieSuggestion}\n\t\t\t\t\t\tsetPreMovie={setPreMovie}\n\t\t\t\t\t\tsetMovies={setMovies}\n\t\t\t\t\t\tsetTitle={setTitle}\n\t\t\t\t\t\tsetIsActive={setIsActive}\n\t\t\t\t\t\tsetPage={setPage}\n\t\t\t\t\t\trefMoviesSuggestion={refMoviesSuggestion}\n\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\tsetMovieId={setMovieId}\n\t\t\t\t\t/>\n\t\t\t\t</Suspense>\n\n\t\t\t\t{/* SearchResultsDetails */}\n\t\t\t\t<Suspense fallback={<h1>Loading.... </h1>}>\n\t\t\t\t\t<SearchResultsDetails title={title} totalResults={totalResults} />\n\t\t\t\t</Suspense>\n\n\t\t\t\t{/* MoviesList */}\n\t\t\t\t<Suspense fallback={<h1>Loading.... </h1>}>\n\t\t\t\t\t<MoviesList\n\t\t\t\t\t\tmovies={movies}\n\t\t\t\t\t\topen={isOpen}\n\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\tsetMovieId={setMovieId}\n\t\t\t\t\t/>\n\t\t\t\t</Suspense>\n\n\t\t\t\t{(totalResults || movies === []) && (\n\t\t\t\t\t<div className='separator' style={{ backgroundColor: \"#ffffff\" }}></div>\n\t\t\t\t)}\n\n\t\t\t\t{/* Pagination */}\n\t\t\t\t<Suspense fallback={<h1>Loading.... </h1>}>\n\t\t\t\t\t<Pagination page={page} setPage={setPage} totalPages={totalPages} />\n\t\t\t\t</Suspense>\n\n\t\t\t\t{renderSeparators()}\n\t\t\t</div>\n\n\t\t\t{/* ModalMovie */}\n\t\t\t<Suspense fallback={<div></div>}>\n\t\t\t\t<ModalMovie\n\t\t\t\t\topen={isOpen}\n\t\t\t\t\tonClose={onClose}\n\t\t\t\t\tmovieId={movieId}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\tsetMovieId={setMovieId}\n\t\t\t\t/>\n\t\t\t</Suspense>\n\t\t</>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n// import \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}